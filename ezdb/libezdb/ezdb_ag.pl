#!/usr/bin/env perl -w
use strict;

##
## This is a script that autogerates the files ezdbg_ag.[Ch]
## of tame autogenerated template classes.
##

my $N = 21;

##----------------------------------------

sub mklist ($$)
{
    my ($tmplt, $n) = @_;
    my @out;
    for (my $i = 0; $i < $n; $i++) {
	my $a = $tmplt;
	$a =~ s/%/$i/g;
	push @out, $a;
    }
    return @out
}

##----------------------------------------

sub mklist_multi (@)
{
    my @arr;
    foreach my $e (@_) {
	if (ref ($e)) {
	    push @arr, mklist ($e->[0], $e->[1]);
	} else {
	    push @arr, $e;
	}
    }
    return @arr;
}

##----------------------------------------

sub commafy {
    return join (", " , @_);
}

##----------------------------------------

sub arglist (@)
{
    return commafy (mklist_multi (@_));
}

##----------------------------------------

sub mkfetch_h ($)
{
    my ($n) = @_;
    print("    void fetch (",
	  arglist ("ev_t ev",  ["ezdb::binder::from_xdr_t b%", $n]),
	   ");\n"
	);
}

##----------------------------------------

sub mkexecute_h ($)
{
    my ($n) = @_;
    print("    void execute (",
	  arglist ("ev_t ev",  ["ezdb::binder::to_xdr_t b%", $n]),
	  ");\n"
	);

}

##----------------------------------------

sub mkfetch_C ($)
{
    my ($n) = @_;
    print("  void\n",
	  "  sth_t::fetch (",
	  arglist ("ev_t ev",  ["binder::from_xdr_t b%", $n]),
	  ")\n",
	  "  {\n",
	  "    binder::from_xdr_bundle_t bundle ($n);\n",
	  join ("", mklist ("    bundle[%] = b%;\n", $n)), 
	  "    fetch_bundle (ev, bundle);\n",
	  "  }\n",
	  "\n"
	);
}

##----------------------------------------

sub mkexecute_C ($)
{
    my ($n) = @_;
    print("  void\n",
	  "  sth_t::execute(",
	  arglist ("ev_t ev",  ["binder::to_xdr_t b%", $n]),
	  ")\n",
	  "  {\n",
	  "    binder::to_xdr_bundle_t bundle ($n);\n",
	  join ("", mklist ("    bundle[%] = b%;\n", $n)), 
	  "    execute_bundle (ev, bundle);\n",
	  "  }\n",
	  "\n"
	);
}

##----------------------------------------

sub mk_h ()
{
    for (my $i = 0; $i < $N; $i++) { mkfetch_h ($i); }
    for (my $i = 0; $i < $N; $i++) { mkexecute_h ($i); }
}

##----------------------------------------

sub mk_C ()
{
    print("#include \"ezdb.h\"\n\n");
    print("namespace ezdb {\n\n");
    for (my $i = 0; $i < $N; $i++) { mkfetch_C ($i); }
    for (my $i = 0; $i < $N; $i++) { mkexecute_C ($i); }
    print("};\n");
}

##----------------------------------------

if ($ARGV[0] eq "-h") {
    mk_h ();
} else {
    mk_C();
}

##----------------------------------------
